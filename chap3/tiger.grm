%{
#include <stdio.h>
#include "util.h"
#include "errormsg.h"

int yylex(void); /* function prototype */

void yyerror(char *s)
{
 EM_error(EM_tokPos, "%s", s);
}
%}


%union {
	int pos;
	int ival;
	string sval;
	}

%token <sval> ID STRING
%token <ival> INT

%token 
  COMMA COLON SEMICOLON LPAREN RPAREN LBRACK RBRACK 
  LBRACE RBRACE DOT 
  PLUS MINUS TIMES DIVIDE EQ NEQ LT LE GT GE
  AND OR ASSIGN
  ARRAY IF THEN ELSE WHILE FOR TO DO LET IN END OF 
  BREAK NIL
  FUNCTION VAR TYPE 

%right ASSIGN
%left OR
%left AND
%nonassoc EQ NEQ LT LE GT GE
%left PLUS MINUS
%left TIMES DIVIDE
%right UMINUS

%start program

%%

program:    exp
            ;

exp:        lvalue
    |       NIL
    |       LPAREN expseq RPAREN
    |       INT
    |       STRING
    |       MINUS exp %prec UMINUS
    |       ID LPAREN args RPAREN
    |       exp PLUS exp
    |       exp MINUS exp
    |       exp TIMES exp
    |       exp DIVIDE exp
    |       exp EQ exp
    |       exp NEQ exp
    |       exp GT exp
    |       exp LT exp
    |       exp GE exp
    |       exp LE exp
    |       exp AND exp
    |       exp OR exp
    |       ID LBRACE refields RBRACE
    |       block OF exp
    |       lvalue ASSIGN exp
    |       IF exp THEN exp ELSE exp
    |       IF exp THEN exp
    |       WHILE exp DO exp
    |       FOR ID ASSIGN exp TO exp DO exp
    |       BREAK
    |       LET decs IN expseq END
            ;

lvalue:     ID
    |       block
    |       lvalue DOT ID
    |       lvalue LBRACK exp RBRACK
            ;

block:      ID LBRACK exp RBRACK
            ;

expseq:     exp SEMICOLON expseq
    |       exp
    |
            ;

args:       exp COMMA args
    |       exp
    |
            ;

refields:   ID EQ exp COMMA refields
    |       ID EQ exp
    |
            ;

decs:       decs dec
    |
            ;

dec:        tydec
    |       vardec
    |       fundec
            ;

tydec:      TYPE ID EQ ty;

ty:         ID
    |       LBRACE tyfields RBRACE
    |       ARRAY OF ID
            ;

tyfields:   ID COLON ID COMMA tyfields
    |       ID COLON ID
    |
            ;

vardec:     VAR ID ASSIGN exp
    |       VAR ID COLON ID ASSIGN exp
            ;

fundec:     FUNCTION ID LPAREN tyfields RPAREN EQ exp
    |       FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp
            ;
